// Generated by view binder compiler. Do not edit!
package com.dojah_inc.dojah_android_sdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dojah_inc.dojah_android_sdk.R;
import com.dojah_inc.dojah_android_sdk.ui.utils.widget.DojahAppBarView;
import com.dojah_inc.dojah_android_sdk.ui.utils.widget.DojahMaterialButton;
import com.dojah_inc.dojah_android_sdk.ui.utils.widget.DojahTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogLocationPermissionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final DojahMaterialButton btnContinue;

  @NonNull
  public final DojahTextView howToPermit;

  @NonNull
  public final AppCompatImageView logo;

  @NonNull
  public final DojahTextView textSub;

  @NonNull
  public final TextView textSubtitle;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final DojahAppBarView toolbar;

  private DialogLocationPermissionBinding(@NonNull LinearLayout rootView,
      @NonNull DojahMaterialButton btnContinue, @NonNull DojahTextView howToPermit,
      @NonNull AppCompatImageView logo, @NonNull DojahTextView textSub,
      @NonNull TextView textSubtitle, @NonNull TextView textTitle,
      @NonNull DojahAppBarView toolbar) {
    this.rootView = rootView;
    this.btnContinue = btnContinue;
    this.howToPermit = howToPermit;
    this.logo = logo;
    this.textSub = textSub;
    this.textSubtitle = textSubtitle;
    this.textTitle = textTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogLocationPermissionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogLocationPermissionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_location_permission, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogLocationPermissionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_continue;
      DojahMaterialButton btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.how_to_permit;
      DojahTextView howToPermit = ViewBindings.findChildViewById(rootView, id);
      if (howToPermit == null) {
        break missingId;
      }

      id = R.id.logo;
      AppCompatImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.text_sub;
      DojahTextView textSub = ViewBindings.findChildViewById(rootView, id);
      if (textSub == null) {
        break missingId;
      }

      id = R.id.text_subtitle;
      TextView textSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textSubtitle == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      DojahAppBarView toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new DialogLocationPermissionBinding((LinearLayout) rootView, btnContinue, howToPermit,
          logo, textSub, textSubtitle, textTitle, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
