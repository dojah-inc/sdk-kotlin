// Generated by view binder compiler. Do not edit!
package com.dojah_inc.dojah_android_sdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dojah_inc.dojah_android_sdk.R;
import com.dojah_inc.dojah_android_sdk.ui.utils.widget.DojahTextView;
import com.dojah_inc.dojah_android_sdk.ui.utils.widget.LoadingButton;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPreviewDriverLicenceBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final LoadingButton btnContinue;

  @NonNull
  public final MaterialButton btnRetake;

  @NonNull
  public final ImageView cameraPreview;

  @NonNull
  public final AppCompatTextView errorTag;

  @NonNull
  public final AppCompatTextView pdfNameTv;

  @NonNull
  public final LinearLayout processing;

  @NonNull
  public final DojahTextView processingText;

  @NonNull
  public final DojahTextView textSubtitle;

  @NonNull
  public final DojahTextView textSubtitle2;

  @NonNull
  public final DojahTextView textSubtitle3;

  @NonNull
  public final TextView title;

  private FragmentPreviewDriverLicenceBinding(@NonNull NestedScrollView rootView,
      @NonNull LoadingButton btnContinue, @NonNull MaterialButton btnRetake,
      @NonNull ImageView cameraPreview, @NonNull AppCompatTextView errorTag,
      @NonNull AppCompatTextView pdfNameTv, @NonNull LinearLayout processing,
      @NonNull DojahTextView processingText, @NonNull DojahTextView textSubtitle,
      @NonNull DojahTextView textSubtitle2, @NonNull DojahTextView textSubtitle3,
      @NonNull TextView title) {
    this.rootView = rootView;
    this.btnContinue = btnContinue;
    this.btnRetake = btnRetake;
    this.cameraPreview = cameraPreview;
    this.errorTag = errorTag;
    this.pdfNameTv = pdfNameTv;
    this.processing = processing;
    this.processingText = processingText;
    this.textSubtitle = textSubtitle;
    this.textSubtitle2 = textSubtitle2;
    this.textSubtitle3 = textSubtitle3;
    this.title = title;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPreviewDriverLicenceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPreviewDriverLicenceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_preview_driver_licence, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPreviewDriverLicenceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_continue;
      LoadingButton btnContinue = ViewBindings.findChildViewById(rootView, id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.btn_retake;
      MaterialButton btnRetake = ViewBindings.findChildViewById(rootView, id);
      if (btnRetake == null) {
        break missingId;
      }

      id = R.id.camera_preview;
      ImageView cameraPreview = ViewBindings.findChildViewById(rootView, id);
      if (cameraPreview == null) {
        break missingId;
      }

      id = R.id.error_tag;
      AppCompatTextView errorTag = ViewBindings.findChildViewById(rootView, id);
      if (errorTag == null) {
        break missingId;
      }

      id = R.id.pdf_name_tv;
      AppCompatTextView pdfNameTv = ViewBindings.findChildViewById(rootView, id);
      if (pdfNameTv == null) {
        break missingId;
      }

      id = R.id.processing;
      LinearLayout processing = ViewBindings.findChildViewById(rootView, id);
      if (processing == null) {
        break missingId;
      }

      id = R.id.processing_text;
      DojahTextView processingText = ViewBindings.findChildViewById(rootView, id);
      if (processingText == null) {
        break missingId;
      }

      id = R.id.text_subtitle;
      DojahTextView textSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textSubtitle == null) {
        break missingId;
      }

      id = R.id.text_subtitle2;
      DojahTextView textSubtitle2 = ViewBindings.findChildViewById(rootView, id);
      if (textSubtitle2 == null) {
        break missingId;
      }

      id = R.id.text_subtitle3;
      DojahTextView textSubtitle3 = ViewBindings.findChildViewById(rootView, id);
      if (textSubtitle3 == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new FragmentPreviewDriverLicenceBinding((NestedScrollView) rootView, btnContinue,
          btnRetake, cameraPreview, errorTag, pdfNameTv, processing, processingText, textSubtitle,
          textSubtitle2, textSubtitle3, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
